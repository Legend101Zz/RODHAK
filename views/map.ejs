<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <script src="https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js"></script>
    <link
      href="https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css"
      rel="stylesheet"
    />
    <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.0/mapbox-gl-directions.js"></script>
    <link
      rel="stylesheet"
      href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.0/mapbox-gl-directions.css"
      type="text/css"
    />
    <title>Rodhak</title>
    <style>
      body {
        margin: 0;
      }

      #map {
        height: 100vh;
        width: 100vw;
      }
      .marker {
        background-image: url("/bus.png");
        background-size: cover;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        cursor: pointer;
      }
      .mapboxgl-popup {
        max-width: 200px;
      }

      .mapboxgl-popup-content {
        text-align: center;
        font-family: "Open Sans", sans-serif;
      }
    </style>
  </head>
  <body>
    <div id="map"></div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      var mapId = "<%=env%>";
      mapboxgl.accessToken = mapId;
      const socket = io("http://localhost:3000/");

      socket.on("connect", () => {
        console.log("Connected");
      });

      const queryString = window.location.pathname.split("p");
      console.log(queryString[1], "here");

      // Initialize the map with a placeholder location
      const map = new mapboxgl.Map({
        container: "map",
        style: "mapbox://styles/mapbox/streets-v12",
        center: [0, 0], // Placeholder center
        zoom: 15,
      });

      map.on("load", () => {
        // Initialize the source for the bus marker
        map.addSource("busNew", {
          type: "geojson",
          data: {
            type: "FeatureCollection",
            features: [],
          },
        });

        // Add the bus marker layer
        map.addLayer({
          id: "buses",
          type: "symbol",
          source: "busNew",
          layout: {
            "icon-image": "bus",
            "icon-size": 2.25,
          },
        });

        // Function to update the bus marker on the map
        function updateBusMarker(coordinates) {
          map.getSource("busNew").setData({
            type: "FeatureCollection",
            features: [
              {
                type: "Feature",
                geometry: {
                  type: "Point",
                  coordinates: coordinates,
                },
                properties: {
                  title: "Rodhak",
                  description: "Driver's Current Location",
                },
              },
            ],
          });

          // Fly the map to the updated location
          map.flyTo({
            center: coordinates,
            speed: 0.5,
          });
        }

        // Listen for WebSocket updates from the server
        socket.on("broadcastDriverData", (data) => {
          if (data.tripId === queryString) {
            console.log("Got coords for Hardy", data);
            updateBusMarker([data.long, data.lat]);
          }
        });
      });
    </script>
  </body>
</html>
