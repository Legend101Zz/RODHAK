<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <script src="https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js"></script>
    <link
      href="https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css"
      rel="stylesheet"
    />
    <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.0/mapbox-gl-directions.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <link
      rel="stylesheet"
      href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.0/mapbox-gl-directions.css"
      type="text/css"
    />
    <link
      href="https://api.mapbox.com/mapbox-gl-js/v2.13.0/mapbox-gl.css"
      rel="stylesheet"
    />
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.13.0/mapbox-gl.js"></script>
    <title>Rodhak</title>
    <style>
      body {
        margin: 0;
      }

      #map {
        height: 100vh;
        width: 100vw;
      }

      #speed {
        height: 20px;
        width: 20px;
        color: black;
      }
      .marker {
        background-image: url("/rodhak.jpeg");
        background-size: cover;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        cursor: pointer;
      }
    </style>
  </head>
  <body>
    <div id="map"></div>
    <div id="speed"><h1>Hello</h1></div>
    <script>
      mapboxgl.accessToken = "<%-process.env.MAP_BOX%>";
      start = "<%-trip.Start%>";
      end = "<%-trip.End%>";
      navigator.geolocation.getCurrentPosition(successLocation, errorLocation, {
        enableHighAccuracy: true,
      });

      navigator.geolocation.watchPosition(successApi, errorApi, {
        enableHighAccuracy: true,
      });

      // fetch("http://localhost:3000/himraahi/coordinate", {
      //   method: "POST", // Specify the HTTP method
      //   body: new FormData({ hello: "world" })
      //     .then((res) => {
      //       console.log(res);
      //     })
      //     .catch((err) => {
      //       console.log(err);
      //     }),
      // });

      // Example POST method implementation:
      // async function postData(url = "", data = {}) {
      //   // Default options are marked with *
      //   const response = await fetch(url, {
      //     method: "POST", // *GET, POST, PUT, DELETE, etc.
      //     mode: "cors", // no-cors, *cors, same-origin
      //     cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
      //     credentials: "same-origin", // include, *same-origin, omit
      //     headers: {
      //       "Content-Type": "application/json",
      //       // 'Content-Type': 'application/x-www-form-urlencoded',
      //     },
      //     redirect: "follow", // manual, *follow, error
      //     referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
      //     body: JSON.stringify(data), // body data type must match "Content-Type" header
      //   });
      //   return response.json(); // parses JSON response into native JavaScript objects
      // }

      // postData("http://localhost:3000/himraahi/coordinate", {
      //   color: "red",
      //   value: "#f00",
      // }).then((data) => {
      //   console.log(data); // JSON data parsed by `data.json()` call
      // });

      async function postJSON(data) {
        try {
          const response = await fetch(
            "http://localhost:3000/himraahi/coordinate",
            {
              method: "POST", // or 'PUT'
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(data),
            }
          );

          const result = await response.json();
          console.log("Success:", result);
        } catch (error) {
          console.log("Error:", error);
        }
      }

      function successApi(position) {
        console.log(position.coords);
        const long = position.coords.longitude;
        const lat = position.coords.latitude;
        const speed = position.coords.speed;
        const data = { long, lat, speed };
        setupMap([position.coords.longitude, position.coords.latitude]);
        const pointer = [long, lat];
        console.log(data);

        postJSON({ data: data });
      }

      function errorApi(err) {
        setupMap([77.170973, 31.104153]);
        console.log(err);
      }

      function successLocation(position) {
        console.log(position);

        const exact = document.getElementById("speed");
        exact.innerHTML = position.coords.heading;
      }

      function errorLocation() {
        const exact = document.getElementById("speed");
        exact.innerHTML = "0";
      }

      function setupMap(center) {
        const map = new mapboxgl.Map({
          container: "map",
          style: "mapbox://styles/mapbox/navigation-night-v1",
          center: center,
          zoom: 15,
        });

        const directions = new MapboxDirections({
          accessToken: mapboxgl.accessToken,
          unit: "metric",
          controls: { instructions: false, interactive: false },
        });

        map.addControl(directions, "bottom-left");

        directions.setOrigin(start);
        directions.setDestination(end);
        const nav = new mapboxgl.NavigationControl();
        map.addControl(nav);

        const geojson = {
          type: "FeatureCollection",
          features: [
            {
              type: "Feature",
              geometry: {
                type: "Point",
                coordinates: center,
              },
              properties: {
                title: "Rodhak",
                description: "Your Current Location",
              },
            },
          ],
        };
        // add markers to map
        for (const feature of geojson.features) {
          // create a HTML element for each feature
          const el = document.createElement("div");
          el.className = "marker";

          // make a marker for each feature and add to the map
          new mapboxgl.Marker(el)
            .setLngLat(feature.geometry.coordinates)
            .addTo(map);
        }
      }
    </script>
  </body>
</html>
